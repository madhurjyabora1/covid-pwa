{"version":3,"sources":["components/District/District.js","components/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["District","state","item","this","props","className","zone","district","districtcode","statecode","lastupdated","Component","Search","search","onSearchInputChange","results","highlightSearch","fetchResults","data","showDefaultValues","defaultValues","toggleDefaultValues","setSearch","highlightedText","text","highlight","parts","split","RegExp","map","part","i","key","toLowerCase","useState","resultsVisible","setResultsVisible","globalClickHandler","target","closest","document","removeEventListener","id","src","alt","placeholder","type","value","onChange","onFocus","addEventListener","style","fontSize","aria-hidden","onClick","length","filter","idx","dist","console","log","App","setHighlightSearch","setData","setResults","setShowDefaultValues","useEffect","handleRequest","getResults","filterData","a","axios","res","zones","error","newResults","includes","newData","toString","e","val","Spinner","animation","size","variant","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2a25c7f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./District.scss\";\r\nclass District extends Component {\r\n  state = {};\r\n  render() {\r\n    const { item } = this.props;\r\n\r\n    return (\r\n      <div className={`card-body ${item.zone === \"Green\" ? \"background-green\" : item.zone===\"Orange\" ? \"background-orange\" : \"background-red\"\r\n    }`}>\r\n        <h3 className=\"card-body-dist\">\r\n          {item.district}\r\n        </h3>\r\n        <hr/>\r\n        <div className=\"card-body-detail\">\r\n          <div className=\"sub-detail\">\r\n            <span className=\"title\">Zone:</span>\r\n            <b className=\"val\" >\r\n              {item.zone}\r\n            </b>\r\n          </div>\r\n          <div className=\"sub-detail\">\r\n            <span className=\"title\">Code:</span>\r\n            <b className=\"val\">{item.districtcode}</b>\r\n          </div>\r\n          <div className=\"sub-detail\">\r\n            <span className=\"title\">State:</span>\r\n            <b className=\"val\">{item.state}</b>\r\n          </div>\r\n          <div className=\"sub-detail\">\r\n            <span className=\"title\">State Code:</span>\r\n            <b className=\"val\">{item.statecode}</b>\r\n          </div>\r\n          <div className=\"sub-detail\">\r\n            <span className=\"title\">Last Updated:</span>\r\n            <b className=\"val\">{item.lastupdated}</b>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default District;\r\n","import React,{useState} from \"react\";\r\nimport \"./Search.scss\"\r\nconst Search = ({\r\n  search,\r\n  onSearchInputChange,\r\n  results,\r\n  highlightSearch,\r\n  fetchResults,\r\n  data,\r\n  showDefaultValues,\r\n  defaultValues,\r\n  toggleDefaultValues,\r\n  setSearch\r\n}) => {\r\n  const highlightedText = (text, highlight) => {\r\n    const parts = text.split(new RegExp(`(${highlight})`, \"gi\"));\r\n    return (\r\n      <span className=\"name\">\r\n      \r\n        {parts.map((part, i) => (\r\n          <span\r\n            key={i}\r\n            className={\r\n              part.toLowerCase() === highlight.toLowerCase() ? \"highlight-txt\" : {}\r\n            }\r\n          >\r\n            {part}\r\n          </span>\r\n        ))}\r\n      </span>\r\n    );\r\n  },\r\n  [resultsVisible, setResultsVisible] = useState(true),\r\n  listenForClickAway = () => {\r\n    document.addEventListener(\"click\", globalClickHandler);\r\n    setResultsVisible(true);\r\n  },\r\n  globalClickHandler = ({ target }) => {\r\n    if (!target.closest(\".search-box\")) {\r\n      document.removeEventListener(\"click\", globalClickHandler);\r\n      setResultsVisible(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"searchbar\">\r\n      <span>\r\n        <div className=\"coronaImg\">\r\n          <img id=\"logo\" src=\"https://i.imgur.com/Ka0dbaX.png\" alt=\"corona\"  />\r\n        </div>      \r\n      <div className=\"container\">\r\n        <div className=\"search-box\">\r\n          <div className=\"main\">\r\n            <input\r\n              placeholder=\"Search for a District...\"\r\n              type=\"text\"\r\n              className=\"search-input\"\r\n              value={search}\r\n              onChange={onSearchInputChange}\r\n              onFocus={() => {\r\n                toggleDefaultValues(true);\r\n                listenForClickAway();\r\n              }}\r\n              \r\n            />\r\n            \r\n            {!search ? (<span className=\"search-icon\">\r\n              <i style={{fontSize: \"1.4rem\"}} className=\"fa fa-search\" aria-hidden=\"true\" />\r\n            </span> ) : (\r\n              <span className=\"search-icon\">\r\n              <i style={{fontSize: \"1.4rem\"}} className=\"fa fa-close\" aria-hidden=\"true\" onClick={()=>setSearch(\"\")}/>\r\n            </span>\r\n            )}\r\n            \r\n          </div>\r\n          \r\n          {!search.length && showDefaultValues && resultsVisible ? (\r\n            <div className=\"result-box\">\r\n              {data\r\n                .filter((item, idx) => defaultValues[item.district])\r\n                .map((dist, idx) => (\r\n                  <div\r\n                    key={idx}\r\n                    className=\"search-result\"\r\n                    onClick={() => {\r\n                      console.log(\"item\", dist);\r\n                      fetchResults(dist.district);\r\n                    }}\r\n                  >\r\n                    {highlightedText(dist.district, search)}\r\n                    \r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : null}\r\n          {highlightSearch ? null : results.length && resultsVisible ? (\r\n            <div className=\"result-box\">\r\n              {results.map((item, idx) => (\r\n                <div\r\n                  key={idx}\r\n                  className=\"search-result\"\r\n                  onClick={() => fetchResults(item.district)}\r\n                >\r\n                  {highlightedText(item.district, search)}\r\n                  \r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : search.length && resultsVisible ? (\r\n            <div className=\"result-box\">\r\n              <div className=\"search-result\">No results</div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport District from \"./components/District/District\";\r\nimport \"./App.scss\"\r\nimport Search from \"./components/Search/Search\";\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst App = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [highlightSearch, setHighlightSearch] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [results, setResults] = useState([]);\r\n  const [showDefaultValues, setShowDefaultValues] = useState(false);\r\n  const [defaultValues] = useState({\r\n    \"Mumbai\": true,\r\n    \"New Delhi\": true,\r\n    \"Chennai\": true,\r\n    \"Kolkata\": true,\r\n    \"Bengaluru Urban\": true\r\n  });\r\n  useEffect(() => {\r\n    handleRequest();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getResults();\r\n\r\n    if (highlightSearch) {\r\n      filterData();\r\n    } \r\n    if(!search)\r\n    {\r\n      handleRequest()\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [search, highlightSearch]);\r\n\r\n  const handleRequest = async () => {\r\n    setData(null);\r\n    try {\r\n      const res = await axios(\"https://api.covid19india.org/zones.json\");\r\n      setData(res.data.zones);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const toggleDefaultValues = val => {\r\n    setShowDefaultValues(val);\r\n  };\r\n\r\n  const onSearchInputChange = e => {\r\n    if (data) {\r\n      setSearch(e.target.value);\r\n      setHighlightSearch(false);\r\n      setShowDefaultValues(false);\r\n    }\r\n  };\r\n\r\n  const fetchResults = val => {\r\n    setSearch(val);\r\n    setHighlightSearch(true);\r\n  };\r\n\r\n  const getResults = () => {\r\n    if (search.length) {\r\n      let newResults = data.filter(item =>\r\n        item.district.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n\r\n      newResults = newResults.filter((item, idx) => idx <= 5);\r\n\r\n      setResults(newResults);\r\n    } else {\r\n      setResults([]);\r\n    }\r\n  };\r\n\r\n  const filterData = () => {\r\n    setData(null);\r\n    let newData = data.filter(\r\n      item => item.district.toString() === search.toString()\r\n    );\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const resetFunc = () => {\r\n    setSearch(\"\");\r\n    setHighlightSearch(false);\r\n    setResults([]);\r\n    setShowDefaultValues(false);\r\n\r\n    handleRequest();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Search\r\n        search={search}\r\n        highlightSearch={highlightSearch}\r\n        onSearchInputChange={onSearchInputChange}\r\n        results={results}\r\n        fetchResults={fetchResults}\r\n        data={data}\r\n        showDefaultValues={showDefaultValues}\r\n        defaultValues={defaultValues}\r\n        toggleDefaultValues={toggleDefaultValues}\r\n        \r\n        setSearch={setSearch}\r\n      />\r\n      <div className=\"main-data\">\r\n        <div className=\"container\">\r\n          {data === null ? (\r\n           <Spinner animation=\"border\"  size=\"large\" variant=\"primary\" className=\"spinnnahhh\">\r\n           <span className=\"sr-only\">Loading...</span>\r\n         </Spinner>\r\n          ) : (\r\n            data.map((item, idx) => <District key={idx} item={item} />)\r\n          )}\r\n        </div>\r\n      </div>\r\n      {highlightSearch && search ? (\r\n        <div className=\"reset-btn\">\r\n          <button onClick={resetFunc} className=\"extra\">\r\n            Reset\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}